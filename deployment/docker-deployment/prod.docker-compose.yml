version: "3.5"

services:
  nginx:
    image: nginx:1.17-alpine
    container_name: nginx
    restart: always
    volumes: 
        # - staticfiles:/www/staticfiles/
        # - mediafiles:/www/mediafiles/
        - ./nginx/conf.d:/etc/nginx/conf.d
        - ./nginx/certs:/etc/nginx/certs
    healthcheck:
      test: stat /etc/nginx/conf.d/nginx.conf && nginx -t || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
    ports: 
      - "80:80"
      - "443:443"
    networks:
      - proxy
    depends_on:
      - app

  app:
    image: ${IMAGE_REPOSITORY:?.env not set up correctly}:latest
    container_name: app
    restart: "no"
    environment:
      # Settings.py
      PYTHONPATH: ${DOCKER_PORTFOLIO_HOME:?.env not set up correctly}
      DEBUG: ${DEBUG:?.env not set up correctly}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:?.env not set up correctly}
      SECRET_KEY: ${SECRET_KEY:?.env not set up correctly}
      # Postgres
      POSTGRES_DB: ${POSTGRES_DB:?.env not set up correctly}
      POSTGRES_USER: ${POSTGRES_USER:?.env not set up correctly}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?.env not set up correctly}
      POSTGRES_HOST: ${POSTGRES_HOST:?.env not set up correctly}
      POSTGRES_PORT: ${POSTGRES_PORT:?.env not set up correctly}
      # Redis
      REDIS_HOST: ${REDIS_HOST:?.env not set up correctly}
      REDIS_PORT: ${REDIS_PORT:?.env not set up correctly}
      # Email Contact page
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:?.env not set up correctly}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:?.env not set up correctly}
      # aws s3 - should be docker/k8s secret
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:?.env not set up correctly}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:?.env not set up correctly}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME:?.env not set up correctly}
      S3_STORAGE_ENABLED: ${S3_STORAGE_ENABLED:?.env not set up correctly}
    volumes:
      # - staticfiles:${DOCKER_APP_CODE:?.env not set up correctly}/staticfiles/
      # - mediafiles:${DOCKER_APP_CODE:?.env not set up correctly}/mediafiles/
      - redisdata:/data
      - ./app/prod.startup_server.sh:${DOCKER_APP_CODE}/prod.startup_server.sh
    healthcheck:
      test: curl -f -s -S http://localhost:8080 || exit 1
      interval: 10s
      timeout: 30s
      retries: 5
    expose: 
      - 8080
    # comment ports if used with nginx (production)
    # ports: 
    #   - "8080:8080"
    networks:
      - backend
      - proxy
    entrypoint:
      - ${DOCKER_APP_CODE:?.env not set up correctly}/prod.startup_server.sh
    depends_on:
      - postgres
      - redis

  worker:
    image: ${IMAGE_REPOSITORY:?.env not set up correctly}:latest
    container_name: worker
    restart: "no"
    environment:
      # Settings.py
      PYTHONPATH: ${DOCKER_PORTFOLIO_HOME:?.env not set up correctly}
      DEBUG: ${DEBUG:?.env not set up correctly}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:?.env not set up correctly}
      SECRET_KEY: ${SECRET_KEY:?.env not set up correctly}
      # Postgres
      POSTGRES_DB: ${POSTGRES_DB:?.env not set up correctly}
      POSTGRES_USER: ${POSTGRES_USER:?.env not set up correctly}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?.env not set up correctly}
      POSTGRES_HOST: ${POSTGRES_HOST:?.env not set up correctly}
      POSTGRES_PORT: ${POSTGRES_PORT:?.env not set up correctly}
      # Redis
      REDIS_HOST: ${REDIS_HOST:?.env not set up correctly}
      REDIS_PORT: ${REDIS_PORT:?.env not set up correctly}
      # Email Contact page
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:?.env not set up correctly}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:?.env not set up correctly}
    volumes:
      # - staticfiles:${DOCKER_APP_CODE:?.env not set up correctly}/staticfiles/
      # - mediafiles:${DOCKER_APP_CODE:?.env not set up correctly}/mediafiles/
      - redisdata:/data
      - ./app/startup_celery.sh:${DOCKER_APP_CODE}/startup_celery.sh
    healthcheck:
      test: ps | grep celery || exit 1
      interval: 10s
      timeout: 30s
      retries: 5
    expose: 
      - 8081
    networks:
      - backend
      - proxy
    entrypoint:
      - ${DOCKER_APP_CODE:?.env not set up correctly}/startup_celery.sh

  postgres:
    image: postgres:12-alpine
    container_name: ${POSTGRES_CONTAINER_NAME:?.env not set up correctly}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?.env not set up correctly}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?.env not set up correctly}
      POSTGRES_DB: ${POSTGRES_DB:?.env not set up correctly}
      POSTGRES_INITDB_ARGS: "--encoding='UTF-8'"
    volumes:
      - ./postgres/config/postgres.conf:/etc/postgres/postgres.conf:ro
      - ./postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data/ 
      - pglogs:/var/lib/postgresql/pglogs/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    expose:
      - 5432
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    restart: "no"
    volumes:
      - ./redis:/healthcheck/
      - redisdata:/data
    healthcheck:
      test: sh /healthcheck/redis_healthcheck.sh
      interval: 5s
      timeout: 5s
      retries: 10
    expose:
      - 6379
    networks:
      - backend


volumes:
  # staticfiles:
  # mediafiles:
  redisdata:
  pgdata:
  pglogs:

networks:
  backend:
    driver: bridge
  proxy:
    driver: bridge