version: "3.5"

services:
  app:
    image: ${IMAGE_REPOSITORY:?}:tests
    container_name: app-tests
    restart: "no"
    environment:
      # Settings.py
      BUILD: ${BUILD:?}
      PYTHONPATH: ${DOCKER_PORTFOLIO_HOME:?}
      SECRET_KEY: ${SECRET_KEY:?}
      LOGGING_ENABLED: ${LOGGING_ENABLED:?}
      # Postgres
      POSTGRES_DB: ${POSTGRES_DB:?}
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_HOST: ${POSTGRES_HOST:?}
      POSTGRES_PORT: ${POSTGRES_PORT:?}
      # Redis
      REDIS_HOST: ${REDIS_HOST:?}
      REDIS_PORT: ${REDIS_PORT:?}
      # Email Contact page
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:?}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:?}
    volumes:
      - ../../app/:${DOCKER_APP_CODE:?}/
      - ../../pytest.ini:${DOCKER_PORTFOLIO_HOME:?}/pytest.ini
    expose: 
      - 8080
    networks:
      - backend
    command: tail -F anything
    depends_on:
      - postgres

  postgres:
    image: postgres:12-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_DB: ${POSTGRES_DB:?}
      POSTGRES_INITDB_ARGS: "--encoding='UTF-8'"
    volumes:
      - ./deployment/docker-deployment/postgres/config/postgres.conf:/etc/postgres/postgres.conf:ro
      - ./deployment/docker-deployment/postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 20s
      timeout: 20s
      retries: 10
    expose:
      - 5432
    networks:
      - backend

networks:
  backend:
    driver: bridge