version: "3.5"

services:

  nginx:
    image: nginx:1.17-alpine
    container_name: nginx
    restart: always
    volumes: 
        - ./nginx/conf.d:/etc/nginx/conf.d
        - staticfiles:/www/staticfiles/
        - mediafiles:/www/mediafiles/
        - certs:/etc/nginx/certs
        # - /data/staticfiles:/www/staticfiles/
        # - /data/mediafiles:/www/mediafiles/
        # - /data/certs:/etc/nginx/certs
    healthcheck:
      test: stat /etc/nginx/conf.d/nginx.conf && nginx -t || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
    ports: 
      - "80:80"
      - "443:443"
    networks:
      - proxy
    depends_on:
      - app
      
  app:
    image: docker.io/gbournique/myportfolio_app:latest
    container_name: app
    restart: "no"
    env_file:
      .env
    volumes:
      - staticfiles:/home/portfolio/app/staticfiles/
      - mediafiles:/home/portfolio/app/mediafiles/
      - redisdata:/data
    # healthcheck:
    #   test: curl -f -s -S http://localhost:8080 || exit 1
    #   interval: 30s
    #   timeout: 30s
    #   retries: 5
    expose: 
      - 8080
    networks:
      - backend
      - proxy
    command:
      - /home/portfolio/app/startup_server.sh
    depends_on:
      - postgres
      - redis

  # worker:
  #   image: docker.io/gbournique/myportfolio_app:latest
  #   container_name: worker
  #   restart: "no"
  #   env_file:
  #     .env
  #   volumes:
  #     - staticfiles:/home/portfolio/app/staticfiles/
  #     - mediafiles:/home/portfolio/app/mediafiles/
  #     - redisdata:/data
  #   healthcheck:
  #     test: ps | grep celery || exit 1
  #     interval: 60s
  #     timeout: 30s
  #     retries: 5
  #   expose: 
  #     - 8081
  #   networks:
  #     - backend
  #     - proxy
  #   entrypoint:
  #     - /home/portfolio/app/startup_worker.sh

  postgres:
    image: postgres:12-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:?.env not set up correctly}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?.env not set up correctly}
      POSTGRES_DB: ${DB_NAME:?.env not set up correctly}
      POSTGRES_INITDB_ARGS: "--encoding='UTF-8'"
    volumes:
      - ./postgres/config/postgres.conf:/etc/postgres/postgres.conf:ro
      - ./postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data/ 
      # - /data/pgdata:/var/lib/postgresql/data/ 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    expose:
      - ${DB_PORT:?.env not set up correctly}
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    restart: "no"
    volumes:
      - ./redis:/healthcheck/
      - redisdata:/data
      # - /data/redisdata:/data
    healthcheck:
      test: sh /healthcheck/redis_healthcheck.sh
      interval: 10s
      timeout: 5s
      retries: 10
    expose:
      - ${REDIS_PORT:?.env not set up correctly}
    networks:
      - backend


volumes:
  staticfiles:
  mediafiles:
  certs:
  redisdata:
  pgdata:

networks:
  backend:
    driver: bridge
  proxy:
    driver: bridge