# Yaml file
# Configuration file for tbe Portfolio App Chart
# used by Helm for Kubernetes deployment


# ----------------------------------------------------
# 
# Global configuration
#
# ----------------------------------------------------

global:
  # Build type (dev/prod)
  # ----------------------------------------------------
  build: dev

  # Image
  # ----------------------------------------------------
  image:
    pullPolicy: IfNotPresent
    repository: gbournique/portfolio_app_demo
    tag: latest

  # Configmaps
  # ----------------------------------------------------
  portfolio_file:
    - name: start-server-script
      mountPath: /home/portfoliouser/portfolio/app/{{ .Values.global.build }}.startup_server.sh
      subPath: "{{ .Values.global.build }}.startup_server.sh"
      readOnly: true
      sourceFilepath: config/{{ .Values.global.build }}.startup_server.sh
    - name: start-celery-script
      mountPath: /home/portfoliouser/portfolio/app/startup_celery.sh
      subPath: "startup_celery.sh"
      readOnly: true
      sourceFilepath: config/startup_celery.sh
  portfolio_env:
    - name: portfolio-env
      data:
        PYTHONPATH: "/home/portfoliouser/portfolio/"
        LOGGING_ENABLED: "True"
        # Postgres
        POSTGRES_DB: "portfoliodb"
        POSTGRES_USER: "postgres"
        POSTGRES_HOST: "{{ .Release.Name }}-postgres-portfolio"
        POSTGRES_PORT: "5432"
        # Redis
        REDIS_HOST: "{{ .Release.Name }}-redis-portfolio-master"
        REDIS_PORT: "6379"
        # aws s3
        AWS_STORAGE_BUCKET_NAME: "portfoliogb"
        AWS_DEFAULT_REGION: "eu-west-2"

  # Secrets
  # ----------------------------------------------------
  portfolio_secret:
    - name: portfolio-secrets
      data:
        SECRET_KEY: "azxey(r8ieohsd1qc93j*%@+1+@-c&kwbgugz2ojvb@sj=!4*c"
        POSTGRES_PASSWORD: "postgres"
        AWS_ACCESS_KEY_ID: "<insert-here>"
        AWS_SECRET_ACCESS_KEY: "<insert-here>"
        # Email Contact page
        EMAIL_HOST_USER: "<insert-here>"
        EMAIL_HOST_PASSWORD: "<insert-here>"


# ----------------------------------------------------
# 
# portfolio-app configuration
#
# ----------------------------------------------------

replicaCountApp: 1

replicaCountWorker: 1

podSecurityContext:
  fsGroup: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

resources:
  app:
    limits:
      cpu: "200m"
      memory: "200Mi"
    requests:
      cpu: "200m"
      memory: "200Mi"
  worker:
    limits:
      cpu: "200m"
      memory: "200Mi"
    requests:
      cpu: "200m"
      memory: "200Mi"

# Wait for postgres containers
# Wait 30s before starting webserver
initialStartupDelay: "0"
# Wait 60s before starting probes
initialDelaySeconds: "60"

readinessProbe:
  periodSeconds: 20
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 2

livenessProbe:
  periodSeconds: 20
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 2

service:
  type: NodePort
  ports:
    - name: webserver
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 31435

ingress:
  enabled: false

nodeSelector: {}

affinity: {}

tolerations: []

env: []

serviceAccount:
  create: true
  annotations: {}
  name: "portfoliouser"


# ----------------------------------------------------
#
#  postgres configuration
#
# ----------------------------------------------------
postgres-portfolio:
  enabled: true
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  postgresqlDatabase: portfoliodb
  resources:
    limits:
      cpu: "200m"
      memory: "200Mi"
    requests:
      cpu: "200m"
      memory: "200Mi"
  persistence:
    size:
      4Gi


# ----------------------------------------------------
#
#  redis configuration
#
# ----------------------------------------------------
redis-portfolio:
  enabled: true
  usePassword: false
  cluster:
    enabled: False
  master:
    resources:
      limits:
        cpu: "200m"
        memory: "200Mi"
      requests:
        cpu: "200m"
        memory: "200Mi"
    persistence:
      size:
        4Gi
