---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: redis-local-storage
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /data/redisdata

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: redis-local-storage
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: redis-config
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      containers:
      - image: redis:alpine
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
        volumeMounts:
        - name: config-volume
          mountPath: /healthcheck/
          readOnly: false
        - name: redis-storage
          mountPath: /data/
        livenessProbe:
          exec:
            command:
            - bin/sh
            - -c
            - /healthcheck/redis_healthcheck.sh
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 10

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - name: "6379"
    port: 6379
    targetPort: 6379

---

apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: redis-config
data:
  redis_healthcheck.sh: "#!/bin/bash\nset -eo pipefail\nhost=\"$(hostname -i || echo
    '127.0.0.1')\"\nif ping=\"$(redis-cli -h \"$host\" ping)\" && [ \"$ping\" = 'PONG'
    ]; then\n\texit 0\nfi\nexit 1\n"
