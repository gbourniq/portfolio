---

apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: app-secrets
data:
  EMAIL_HOST_PASSWORD: MDAyNEQ0NzhGQzQx
  DJANGO_SECRET_KEY: YXp4ZXkocjhpZW9oc2QxcWM5M2oqJUArMStALWMma3diZ3VnejJvanZiQHNqPSE0KmM=

---

apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: app-env
data:
  DEBUG: "False"
  ALLOWED_HOSTS: "*"
  EMAIL_HOST_USER: gbournique.dev@gmail.com

---

apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: app-config
data:
  run_server.sh: |
    #!/bin/sh
    cd /code/
    python manage.py collectstatic --no-input -v 0
    python manage.py makemigrations
    python manage.py migrate
    gunicorn portfolio.wsgi:application --bind 0.0.0.0:8080

---

apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: worker-config
data:
  run_celery.sh: |
    #!/bin/sh
    cd /code/
    celery --app=portfolio.celeryconf worker --loglevel=info --concurrency=10 -n worker1.%h

---

apiVersion: v1
kind: Service
metadata:
  name: app
  labels:
    app: app
spec:
  selector:
    app: app
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: worker
  labels:
    app: worker
spec:
  selector:
    app: worker
  ports:
  - name: "8081"
    port: 8081
    targetPort: 8081

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
        role: app
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: app-config
      - name: staticfiles
        hostPath:
          path: /data/staticfiles/
          type: DirectoryOrCreate
      - name: mediafiles
        hostPath:
          path: /data/mediafiles/
          type: DirectoryOrCreate
      - name: redisdata
        hostPath:
          path: /data/redisdata/
          type: DirectoryOrCreate
      containers:
      - name: app
        image: docker.io/gbournique/portfolio_app:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: app-env
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: ALLOWED_HOSTS
              name: app-env
        - name: EMAIL_HOST_USER
          valueFrom:
            configMapKeyRef:
              key: EMAIL_HOST_USER
              name: app-env
        - name: EMAIL_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: EMAIL_HOST_PASSWORD
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DJANGO_SECRET_KEY
        volumeMounts:
        - name: staticfiles
          mountPath: /code/staticfiles/
          readOnly: false
        - name: mediafiles
          mountPath: /code/mediafiles/
          readOnly: false
        - name: redisdata
          mountPath: /data/
          readOnly: false
        - name: config-volume
          mountPath: /code/entrypoints/
          readOnly: false
        # args:
        # - sh
        # - -c
        # - sleep 3600
        command: ["sh"]
        args: ["/code/entrypoints/run_server.sh"]
        ports:
        - containerPort: 8080
        resources: {}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - curl -f -s -S http://localhost:8080 || exit 1
          initialDelaySeconds: 20
          periodSeconds: 30
          failureThreshold: 5    

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
        role: app
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: worker-config
      - name: staticfiles
        hostPath:
          path: /data/staticfiles/
          type: DirectoryOrCreate
      - name: mediafiles
        hostPath:
          path: /data/mediafiles/
          type: DirectoryOrCreate
      - name: redisdata
        hostPath:
          path: /data/redisdata/
          type: DirectoryOrCreate
      containers:
      - name: worker
        image: docker.io/gbournique/portfolio_app:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: app-env
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: ALLOWED_HOSTS
              name: app-env
        - name: EMAIL_HOST_USER
          valueFrom:
            configMapKeyRef:
              key: EMAIL_HOST_USER
              name: app-env
        - name: EMAIL_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: EMAIL_HOST_PASSWORD
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DJANGO_SECRET_KEY
        volumeMounts:
        - name: staticfiles
          mountPath: /code/staticfiles/
          readOnly: false
        - name: mediafiles
          mountPath: /code/mediafiles/
          readOnly: false
        - name: redisdata
          mountPath: /data/
          readOnly: false
        - name: config-volume
          mountPath: /code/entrypoints/
          readOnly: false
        # args:
        # - sh
        # - -c
        # - sleep 3600
        command: ["sh"]
        args: ["/code/entrypoints/run_celery.sh"]
        ports:
        - containerPort: 8081
        resources: {}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - ps | grep celery || exit 1
          initialDelaySeconds: 20
          periodSeconds: 30
          failureThreshold: 5

---