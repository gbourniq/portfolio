version: '3.4'

services:
    sslgen:
        image: eigentech/sslgen:1.2
        container_name: sslgen
        restart: on-failure
        volumes:
            - ssl_data:/etc/ssl/certs

    eigen-nginx:
        image: nginx:alpine
        container_name: eigen-nginx
        restart: always
        expose:
            - 81 #nginx metrics (exposed internally for metricbeat)
        ports:
            - 80:80
            - 443:443
        volumes:
            - eigen_webapp_static_files:/var/www/eigen_webapp_static
            - eigen_logs:/var/log/eigen
            - ssl_data:/etc/ssl/certs

            # using nginx_files/ instead of nginx in order to have real log files because
            # nginx:alpine forces /var/log/nginx to stdout and stderr
            - eigen_nginx_logs:/var/log/nginx_files/

            - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/config/conf.d:/etc/nginx/conf.d
            - ./nginx/config/dhparams.pem:/etc/nginx/dhparams.pem
        depends_on:
            - eigen-webapp
            - sslgen
        command: /bin/sh -c "nginx -g 'daemon off;'"

    eigen-webapp:
        image: eigentech/$EIGEN_IMAGE:$EIGEN_TAG
        container_name: eigen-webapp
        restart: always
        env_file:
            .env
        depends_on:
            - eigen-postgres
            - eigen-mongo
            - eigen-redis
        expose:
            - 8000
            - 8001
        command: /bin/bash /home/eigenuser/eigen/eigen/startup.sh
        volumes:
            - ./eigen/plugins:/home/eigenuser/eigen/eigen/plugins
            - ./eigen/config/client_settings.py:/home/eigenuser/eigen/eigen/client_settings.py
            - ./eigen/config/client_ml_settings.py:/home/eigenuser/eigen/eigen/client_ml_settings.py
            - eigen_logs:/home/eigenuser/eigen/eigen/logs
            - eigen_webapp_static_files:/home/eigenuser/eigen/eigen/static
            - eigen_data:/home/eigenuser/eigen/eigen/data

    eigen-worker:
        image: eigentech/$EIGEN_IMAGE:$EIGEN_TAG
        container_name: eigen-worker
        restart: always
        env_file:
            .env
        environment:
            LD_PRELOAD: "/home/eigenuser/eigen/conda/lib/libjemalloc.so"
        depends_on:
            - eigen-webapp
            - eigen-mongo
            - eigen-postgres
            - eigen-redis
        volumes:
            - ./eigen/plugins:/home/eigenuser/eigen/eigen/plugins
            - ./eigen/config/client_settings.py:/home/eigenuser/eigen/eigen/client_settings.py
            - ./eigen/config/client_ml_settings.py:/home/eigenuser/eigen/eigen/client_ml_settings.py
            - eigen_logs:/home/eigenuser/eigen/eigen/logs
            - eigen_data:/home/eigenuser/eigen/eigen/data
        command: /bin/bash -c '/home/eigenuser/eigen/eigen/eigenapp/workers_startup.sh && tail -f /home/eigenuser/eigen/eigen/logs/general.log'

    eigen-postgres:
        image: postgres:11.1
        container_name: eigen-postgres
        restart: always
        environment:
            POSTGRES_USER: "eigenuser"
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
            POSTGRES_DB: "eigendb"
            POSTGRES_INITDB_ARGS: "--encoding='UTF-8'"
        volumes:
            # config file
            - ./postgres/config/postgres.conf:/etc/postgres/postgres.conf:ro

            # postgresql logs
            - eigen_postgres_logs:/var/log/postgresql/

            # postgres paths
            - ./backups/postgres:/backups
            - eigen_postgres:/var/lib/postgresql/data

        expose:
            - 5432
        command: "postgres -c 'config_file=/etc/postgres/postgres.conf'"

    eigen-mongo:
        image: mongo:4.0.5
        container_name: eigen-mongo
        restart: always
        volumes:
            - ./backups/mongo:/backups
            - eigen_mongo:/data/db
        expose:
            - 27017

    eigen-redis:
        image: redis
        container_name: eigen-redis
        restart: always
        expose:
            - 6379

    eigen-tika:
        image: eigentech/tika:1.0
        container_name: eigen-tika
        restart: always
        expose:
            - 9998

    deliverytools:
        image: eigentech/${DELIVERY_TOOLS_IMAGE:-delivery-tools}:$DELIVERY_TOOLS_TAG
        container_name: deliverytools
        restart: always
        ports:
            - ${DELIVERY_TOOLS_PORT:-8002}:5000


volumes:
    eigen_data:
    eigen_logs:
    eigen_webapp_static_files:
    eigen_mongo:
    eigen_nginx_logs:
    eigen_postgres:
    eigen_postgres_logs:
    ssl_data:

