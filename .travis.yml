---
sudo: required
services:
  - docker

branches:
  only:
    - master

before_install:
  - source .ansible-env
  - sudo apt-get update -qq
  - sudo apt install python3-pip -y && alias pip=pip3
  - sudo apt-get install sshpass # sshpass is needed for Travis instance to connect to EC2 instance

install:
  # Install Ansible on Travis instance
  - sudo apt-get update -qq
  - sudo pip install ansible
  - sudo pip install ansible-lint

script:
  # Run tests on Travis instance
  - ./travis_steps/1_run_pytest/1_create_environment.sh
  - ./travis_steps/1_run_pytest/2_run_unit_tests_with_pytest.sh
  - ./travis_steps/1_run_pytest/3_run_frontend_unit_tests_with_npm.sh

  # Ansible deployment on ec2-instance
  - ./travis_steps/2_build_deployment/1_instance_setup.sh
  - ./travis_steps/2_build_deployment/2_clone_repo.sh
  - ./travis_steps/2_build_deployment/3_build_images.sh
  - ./travis_steps/2_build_deployment/4_start_services.sh
  - ./travis_steps/2_build_deployment/5_tag_images.sh
  - ./travis_steps/2_build_deployment/6_publish_images.sh
  # - ./travis_steps/3_scan_docker_images/1_install_anchore.sh
  # - ./travis_steps/3_scan_docker_images/2_scan_image.sh
  - ./travis_steps/4_prod_deployment/1_pull_images_and_start_services.sh

  # Run make commands directly
  # - make ansible-all
  # - make ansible-define-host
  # - make ansible-checksyntax
  # - make ansible-instance-setup
  # - make ansible-deploy-build
  # - make ansible-instance-cleanup
  # - make ansible-deploy-prod

after_success:
  - echo "Successfully deployed production environment to EC2 instance with Ansible via Travis CI."


