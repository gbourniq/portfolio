# ============================= LOCAL / TRAVIS CI ============================
# Sensitive variables to be defined manually, eg. ~/.bash_profile
# and in the Travis CI Configuration Build

# Publish image to DockerHub
# DOCKER_PASSWORD=

# AWS EC2 and S3
# export AWS_ACCESS_KEY_ID=
# export AWS_SECRET_ACCESS_KEY=

# Ansible to deploy to QA instance
# ANSIBLE_VAULT_PASSWORD=
# ANSIBLE_SSH_PASSWORD=


# =================================== PATHS ===================================

export PORTFOLIO_REPO_HOME="$PWD"  # <-- should be base of repository
export PYTHONPATH="$PORTFOLIO_REPO_HOME:$PYTHONPATH"

# Paths inside the docker container app
export DOCKER_PORTFOLIO_HOME=/home/portfolio
export DOCKER_APP_CODE=/home/portfolio/app

export CONDA_ENV_NAME=portfolio

# ================================ SETTINGS.PY ================================

export DEBUG=False
export ALLOWED_HOSTS=*
export SECRET_KEY='azxey(r8ieohsd1qc93j*%@+1+@-c&kwbgugz2ojvb@sj=!4*c'

# Storage for Django static and media files
# If set to false, files are stored on the host
# Note: Check staticfiles and mediafiles volumes in compose files
# If set to true, staticfiles are located at {AWS_STORAGE_BUCKET_NAME}/static
export S3_STORAGE_ENABLED=True

# Email details for contact page
export EMAIL_ENABLED=False
export EMAIL_HOST_USER="dummy_email@gmail.com"
export EMAIL_HOST_PASSWORD="dummy_pwd"

# PostgreSQL
export POSTGRES_DB=portfoliodb
export POSTGRES_USER=postgres
export POSTGRES_PASSWORD=postgres
export POSTGRES_HOST=postgres
export POSTGRES_PORT=5432

# Redis (Cache and message broker for celery)
export REDIS_HOST=redis
export REDIS_PORT=6379

# Set to True to save logs in log.info
export LOGGING_ENABLED=False

# ===================================== AWS =====================================

export AWS_DEFAULT_REGION=eu-west-2
export AWS_STORAGE_BUCKET_NAME=portfoliogb
export S3_BASE_URI=s3://${AWS_STORAGE_BUCKET_NAME}
export S3_BASE_URL=https://s3.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_STORAGE_BUCKET_NAME}

# S3 locations
export S3_DOCKER_DEPLOY_URI=${S3_BASE_URI}/docker_deploy
export S3_POSTGRES_BACKUP_URI=${S3_BASE_URI}/postgres_backup
# export S3_APP_FILES_URL=${S3_BASE_URL}/files

# ==================================== DOCKER ===================================

export POETRY_VERSION=1.0.5

# Build type (dev/prod)
export BUILD=dev

# Compose variables
export COMPOSE_FILE=${BUILD}.docker-compose.yml
export PROJECT_NAME=portfolio
export COMPOSE_ARGS="-p ${PROJECT_NAME} -f ${COMPOSE_FILE}"
export DOCKERFILE_PATH=deployment/docker-build/app.Dockerfile

# Repository variables
export DOCKER_USER=gbournique
export IMAGE_REPOSITORY=gbournique/portfolio_app

# Postgres backup
export POSTGRES_CONTAINER_NAME=postgres



# ================================== ANSIBLE ====================================

# Instance
export ANSIBLE_INSTANCE_ID=i-052aaf7c90e2923f3
export ANSIBLE_HOST=18.132.30.8
export ANSIBLE_HOST_PUBLIC_DNS=ec2-18-132-30-8.eu-west-2.compute.amazonaws.com
export ANSIBLE_DEV_HOSTNAME=dev.gbournique.com
export ANSIBLE_APP_PORT=8080

# For Travis CI to avoid host key checking
export ANSIBLE_HOST_KEY_CHECKING=False

# Prepare deployment
export PORTFOLIO_ROOT_DIR=/home/ubuntu/portfolio/

# Deployment
export DOCKER_USER=gbournique
export IMAGE_REPOSITORY=gbournique/portfolio_app

# Email notification
# Note QA_INSTANCE_TIME_MINUTES must be < 10mn (Travis limitation)
export QA_INSTANCE_TIME_MINUTES=5
export SLACK_TOKEN=T011F2R0WMA/B011F2YNEDS/W4CTrFJ2VGXeE84pAqwUUzi9

# ================================ CLI COSMETICS ================================

# Source CLI helper functions and variables
if [ -f ./scripts/cli_cosmetics.sh ]; then
    source ./scripts/cli_cosmetics.sh
    echo "./scripts/cli_cosmetics.sh has been sourced."
else
    echo "ERROR: ./scripts/cli_cosmetics.sh not found"
fi


# ===============================================================================

echo ".env has been sourced."