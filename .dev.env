# ----------------------------------------------------
#
# Sourcing environment variables from ./deployment/.env
#
# ----------------------------------------------------
if [ -f ./deployment/.env ]; then
    source ./deployment/.env
else
    echo ">>> ERROR: ./deployment/.env not found!"
fi
export BUILD=dev # <-- Override build type (Do not change)

# ----------------------------------------------------
#
# DEV SETTINGS
#
# ----------------------------------------------------
export BAREMETAL_DEPLOYMENT=False
export CONDA_ENV_NAME=portfolio
export PORTFOLIO_REPO_HOME="$PWD"  # <-- should be base of repository
export PYTHONPATH="$PORTFOLIO_REPO_HOME:$PYTHONPATH"

# ----------------------------------------------------
#
# DJANGO SETTINGS.PY (overrides values in deployment/.env)
#
# ----------------------------------------------------
export DEBUG=True
export ENABLE_S3_FOR_DJANGO_FILES=False
if [ "$BAREMETAL_DEPLOYMENT" == True ]; then
    export POSTGRES_HOST=localhost
    export REDIS_HOST=
fi

# ----------------------------------------------------
#
# DOCKER - Build Image
#
# ----------------------------------------------------
export POETRY_VERSION=1.0.5
export DOCKERFILE_PATH=deployment/docker-build/app.Dockerfile
export PROJECT_NAME=portfolio
export COMPOSE_FILE=${BUILD}.docker-compose.yml
export COMPOSE_ARGS="-p ${PROJECT_NAME} -f ${COMPOSE_FILE}"

# ----------------------------------------------------
#
# AWS S3 - Upload docker_deploy.tar.gz
#
# ----------------------------------------------------
export DOCKER_DEPLOY_FOLDER=docker_deploy_tarballs
export S3_DOCKER_DEPLOY_URI=${S3_BASE_URI}/${DOCKER_DEPLOY_FOLDER}
export S3_DOCKER_DEPLOY_TARBALL_CD_PIPELINE=docker_deploy_cd_pipeline
export S3_DOCKER_DEPLOY_TARBALL_CUSTOM=docker_deploy_app


# ----------------------------------------------------
echo "> ./.dev.env has been sourced."


# Validate dev environment variables are set
# ----------------------------------------------------
source ./scripts/env_validation.sh