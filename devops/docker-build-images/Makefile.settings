
############ SET SHELL ############
SHELL=/bin/bash -e -o pipefail

###################################
######## PROJECT SETTINGS #########
###################################
PROJECT_NAME := myportfolio
COMPOSE_FILE := docker-compose.yml
BUILD_ARGS = -p $(PROJECT_NAME) -f $(COMPOSE_FILE)

# Services Ports
export PROXY_HTTP_PORT:=80
export APP_HTTP_PORT:=4000
export CLIENT_HTTP_PORT:=3000
export MONGO_HTTP_PORT:=27017

# Docker settings
export DOCKER_REGISTRY=docker.io
export ORG_NAME=gbournique
export DOCKER_USER=gbournique


###########################
######## COSMETICS ########
###########################
RED := "\e[1;31m"
YELLOW := "\e[1;33m"
GREEN := "\033[32m"
NC := "\e[0m"
INFO := @bash -c 'printf $(YELLOW); echo "=> $$1"; printf $(NC)' MESSAGE
SUCCESS := @bash -c 'printf $(GREEN); echo "[SUCCESS] $$1"; printf $(NC)' MESSAGE
WARNING := @bash -c 'printf $(RED); echo "[WARNING] $$1"; printf $(NC)' MESSAGE


###################################
### ENV VARIABLES AND FUNCTIONS ###
###################################
# App version settings
COMMIT_TIMESTAMP := $(shell echo $$(git log -1 --pretty='format:%cd' --date='format:%Y%m%d%H%M%S' 2>/dev/null))
COMMIT_ID := $(shell echo $$(git rev-parse --short HEAD 2>/dev/null))
COMMIT_TAG := $(shell echo $$(git tag --points-at HEAD 2>/dev/null))
export APP_VERSION ?= $(COMMIT_TIMESTAMP).$(COMMIT_ID)$(if $(COMMIT_TAG),.$(COMMIT_TAG),)

# Docker host settings
DOCKER_HOST_IP := $(shell echo $$DOCKER_HOST | awk -F/ '{printf $$3}' | awk -F: '{printf $$1}')
DOCKER_HOST_IP := $(if $(DOCKER_HOST_IP),$(DOCKER_HOST_IP),localhost)

# Dangling image function
# Syntax: $(call clean_dangling_images,<repository>)
clean_dangling_images = docker images -q -f dangling=true -f label=application=$(1) | xargs -I ARGS docker rmi -f ARGS || true

# Port introspection functions
# Syntax: $(call get_port_mapping,<docker-compose-environment>,<service-name>,<internal-port>)
get_raw_port_mapping = $$(docker-compose $(1) ps -q $(2) | xargs -I ID docker port ID $(3))
get_port_mapping = $$(echo $$(IFS=':' read -r -a array <<< "$(call get_raw_port_mapping,$(1),$(2),$(3))" && echo "$${array[1]}"))

# Tagging and Publishing functions
# Syntax: $(call tag_image,<docker-compose-environment>,<service-name>,<fully-qualified-tag>)
# Syntax: $(call publish_image,<docker-compose-environment>,<service-name>,<fully-qualified-repository>)
tag_image = $$(echo $(call get_image_id,$(1),$(2)) | xargs -I ARG docker tag ARG $(3);)
publish_image = { \
	for tag in $(call get_repo_tags,$(1),$(2),$(3)); \
		do echo $$tag | xargs -I TAG docker push TAG; \
	done; \
}
