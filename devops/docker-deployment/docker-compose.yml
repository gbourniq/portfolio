version: "3.7"

services:

  nginx:
    restart: always
    build:
      context: ../..
      dockerfile: devops/docker-deployment/nginx.dockerfile
    container_name: nginx
    volumes: 
        - static:/www/staticfiles/
        - media:/www/mediafiles/
    ports: 
      - "1221:80"
    networks:
      - proxy
    depends_on:
      - app
      
  app:
    build:
      context: ../..
      dockerfile: devops/docker-deployment/app.dockerfile
      args:
        app_component : "backend-app"
        app_version: ${APP_VERSION}
    container_name: app
    volumes:
      - static:/code/staticfiles/
      - media:/code/mediafiles/
      - redisdata:/data
    depends_on:
      - postgres
      - redis
    networks:
      - backend
      - proxy
    env_file:
      - ./config/app.env
    environment:
      Debug: ${DEBUG}
    expose: 
      - 8080
    entrypoint:
      - ./run_server.sh

  postgres:
    build:
      context: ../..
      dockerfile: devops/docker-deployment/postgres.dockerfile
    container_name: postgres
    restart: unless-stopped
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data/ 
    env_file:
      - ./config/postgres.env
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    expose:
      - 6379
    volumes:
      - redisdata:/data
    networks:
      - backend

  celery:
    build:
      context: ../..
      dockerfile: devops/docker-deployment/app.dockerfile
      args:
        app_component : "backend-celery"
        app_version: ${APP_VERSION}
    container_name: celery
    volumes:
      - static:/code/main/static/
      - media:/code/main/mediafiles/
      - redisdata:/data
    depends_on:
      - postgres
      - redis
    networks:
      - backend
      - proxy
    env_file:
      - ./config/app.env
    expose: 
      - 8080
    entrypoint:
      - ./run_celery.sh

volumes:
  static:
  media:
  pgdata:
  redisdata:

networks:
  backend:
    driver: bridge
  proxy:
    driver: bridge